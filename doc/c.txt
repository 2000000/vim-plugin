*c.txt*

                                              *c-base* *cb*
char * const s;
const char * s;
char const * s;

Reserved words                                *c-reserve* *c-res*
C89(32):
unsigned  return  while  auto  int
register  signed  union  case  for
continue  sizeof  break  enum  if
volatile  double  short  long  do
          switch  const  goto
default   struct         else
typedef   extern         char
          static         void

C99(+5):
_Bool _Complex  _Imaginary inline restrict

Operator precedence            Associativity
-----------------------------------------------
() [] -> .
! ~ ++ -- - (type) * & sizeof	right to left
* / %
+ -
<< >>
< <= > >=
== !=
&
^
|
&&
||
?:                              right to left
= += -= etc.                    right to left
,

classification:
arithmetic: +, -, *, /, %
assignment: = += -= etc.
bitwise logic: ~, &, |, ^
bitwise shifts: <<, >>
boolean logic: !, &&, ||
conditional evaluation: ? :
equality testing: ==, !=
increment and decrement: ++, --
order relations: <, <=, >, >=

c99 std lib <24>                                       *c-lib*
C:   /usr/include/
C++: /usr/include/c++ <cassert>
<assert.h>  <complex.h>  <ctype.h>     <errno.h>
<fenv.h>    <float.h>    <inttypes.h>  <iso646.h>
<limits.h>  <locale.h>   <math.h>      <setjmp.h>
<signal.h>  <stdarg.h>   <stdbool.h>   <stddef.h>
<stdint.h>  <stdio.h>    <stdlib.h>    <string.h>
<tgmath.h>  <time.h>     <wchar.h>     <wctype.h>

Postfix Increment Operator                            *c-increment* *c-inc*
*s++; // *(s++);
*++s;
(*s)++;
++*s;

C99 P67
i = ++i + 1; a[i++] = i; //the behavior is undefined
i+++i; i+i++;

                                                     *cpp-base* *cpp-b*
C++ 11 (73):
alignas    continue     friend    register         true
alignof    decltype     goto      reinterpret_cast try
asm        default      if        return           typedef
auto       delete       inline    short            typeid
bool       do           int       signed           typename
break      double       long      sizeof           union
case       dynamic_cast mutable   static           unsigned
catch      else         namespace static_assert    using
char       enum         new       static_cast      virtual
char16_t   explicit     noexcept  struct           void
char32_t   export       nullptr   switch           volatile
class      extern       operator  template         wchar_t
const      false        private   this             while
constexpr  float        protected thread_local
const_cast for          public    throw
种继承方式：私有成员都变不可用
公有继承，公有保护保持原样，保护继承公有保护全保护，私有继承公有保护全私有。
不派生时，保护与私有的地位一致，类外都无法访问，但保护成员可以被派生类的成员函数引用。
Java继承不分共有私有保护，简化了继承关系处理，但也能解决实际问题



vim: tw=80
